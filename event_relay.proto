syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.eventrelay";
option java_outer_classname = "EventRelayProto";

package eventrelay;

service EventRelay {
  rpc PublishEvents(PublishEventsRequest) returns (PublishEventsResponse) {}
  rpc PullEvents(PullEventsRequest) returns (PullEventsResponse) {}
  rpc ListTopics(ListTopicsRequest) returns (ListTopicsResponse) {}
  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse) {}
  rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse) {}
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {}
  rpc CreateSubscription(CreateSubscriptionRequest) returns (CreateSubscriptionResponse) {}
  rpc DeleteSubscription(DeleteSubscriptionRequest) returns (DeleteSubscriptionResponse) {}
}

message Topic {
  string id = 1;
  string name = 2;
}

message ListTopicsRequest {
  int32 page = 1;
}

message ListTopicsResponse {
  repeated Topic topics = 1;
}

message CreateTopicRequest {
  string name = 1;
}

message CreateTopicResponse {
  Topic topic = 1;
}
 

message NewSubscription {
  string name = 1;
  string topicName = 2;
  string topicIdentifier = 3;
  bool push = 4;
  map<string, string> config = 6;
  bool paused = 7;
}

message Subscription {
  string id = 1;
  string name = 2;
  string topicName = 3;
  string topicIdentifier = 4;
  bool push = 5;
  map<string, string> config = 7;
  bool paused = 8;
}

message ListSubscriptionsRequest {
  int32 page = 1;
}

message ListSubscriptionsResponse {
  repeated Subscription subscriptions = 1;
}

message GetSubscriptionRequest {
  string id = 1;
}

message GetSubscriptionResponse {
  Subscription subscription = 1;
}

message CreateSubscriptionRequest {
  NewSubscription subscription = 1;
}

message CreateSubscriptionResponse {
  Subscription subscription = 1;
}
 
message DeleteSubscriptionRequest {
  string id = 1;
}

message DeleteSubscriptionResponse {
  Subscription subscription = 1;
}

message NewEvent {
  string name = 1;
  string data = 2; // json encoded data
  string source = 3;
  string userId = 4;
  string anonymousId = 5;
  string occurredAt = 6;
  map<string, string> context = 7;
}

message Event {
  string id = 1;
  string name = 2;
  string topic = 3;
  string data = 4;
  string source = 5;
  string userId = 6;
  string anonymousId = 7;
  string occurredAt = 8;
  map<string, string> context = 9;
  int32 offset = 10;
  repeated string errors = 11;
}

message PublishEventsRequest {
   string topic = 1;
   repeated NewEvent events = 2;
}

message PublishEventsResponse {
   repeated Event events = 1;
}

message PullEventsRequest {
  string topic = 1;
  int32 batchSize = 2;
  int32 offset = 3;
}

message PullEventsResponse {
  repeated Event events = 1;
}
